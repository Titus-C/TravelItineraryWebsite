@page "/Addexpenses"
@using Microsoft.AspNetCore.Authorization

@inject NavigationManager Navi

<PageTitle>Add Expense</PageTitle>

<h1>Add Expense</h1>

<!-- Expense Form -->
<EditForm Model="newExpense" OnValidSubmit="AddExpense" @formname="addExpenseForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="expenseName">For what:</label>
        <InputText id="expenseName" @bind-Value="newExpense.Name" required />
    </div>

    <div>
        <label for="expenseAmount">How much:</label>
        <InputNumber min="0" id="expenseAmount" @bind-Value="newExpense.Amount" required />
    </div>

    <div>
        <label for="category">Category:</label>
        <select id="category" @bind="newExpense.Category" required>
            <option value="">Choose Category</option>
            <option value="Food">Food</option>
            <option value="Transport">Transport</option>
            <option value="Accommodation">Accommodation</option>
            <option value="Entertainment">Entertainment</option>
            <option value="Shopping">Shopping</option>
            <option value="Others">Others</option>
        </select>
    </div>

    <div>
        <label for="expenseDate">When:</label>
        <InputDate id="expenseDate" @bind-Value="newExpense.Date" required />
    </div>

    <button type="submit" class="submit-button">Add Expense</button>

    <NavLink class="guides-link btn btn-outline-dark" href="guides">
        Cancel
    </NavLink>
</EditForm>

@code {
    [SupplyParameterFromForm]
    private Expense newExpense { get; set; } = new Expense();

    protected override void OnInitialized()
    {
        newExpense.Date= DateTime.Now;
    }

    private void AddExpense()
    {
        if (!string.IsNullOrWhiteSpace(newExpense.Name) && newExpense.Amount > 0)
        {
            // You can add logic to store the expense here
            // For now, let's just navigate back to the expense manager page
            Navi.NavigateTo("/guides");
        }
    }

    private void Cancel()
    {
        // Navigate back to the expense manager page without saving
        Navi.NavigateTo("/guides");
    }

    public class Expense
    {
        public string Name { get; set; }
        public decimal Amount { get; set; }
        public string Category { get; set; }
        public DateTime Date { get; set; }
    }
}