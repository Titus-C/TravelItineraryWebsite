@page "/weather"
@using Microsoft.AspNetCore.Authorization
@inject Service.WeatherForecast WeatherForecast
@attribute [Authorize(Roles = "Administrator, User")]

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>Enter a city to get its current weather and forecast:</p>

<input @bind="City" placeholder="Enter city" />
<button @onclick="GetWeather">Get Weather</button>

@if (weatherData != null)
{
    <h2>Current Weather in @weatherData.Location.Name, @weatherData.Location.Country</h2>
    <p>Temperature: @weatherData.Current.TempC °C (@weatherData.Current.TempF °F)</p>
    <p>Humidity: @weatherData.Current.Humidity%</p>
    <p>Condition: @weatherData.Current.Condition</p>
    <p>Local Time: @weatherData.Location.Localtime</p>

    <h3>Forecast</h3>
    @foreach (var day in weatherData.Forecast.ForecastDay)
    {
        <p>
            <strong>Date:</strong> @day.Date<br />
            <strong>Max Temp:</strong> @day.Day.MaxtempC °C<br />
            <strong>Min Temp:</strong> @day.Day.MintempC °C<br />
            <strong>Chance of Rain:</strong> @day.Day.DailyChanceOfRain%
        </p>
    }
}

@code {
    private Service.WeatherData weatherData;
    private string City = "Japan";

    private async Task GetWeather()
    {
        System.Diagnostics.Debug.WriteLine("GetWeather button clicked!"); // Debug log
        try
        {
            weatherData = await WeatherForecast.GetWeatherAsync(City);
            System.Diagnostics.Debug.WriteLine("Weather data retrieved successfully.");
        }
        catch (Exception ex)
        {
            System.Diagnostics.Debug.WriteLine($"Error fetching weather data: {ex.Message}");
        }
    }
}