@page "/weathers/details"
@using Microsoft.EntityFrameworkCore
@using TravelItineraryWebsite.Domain
@inject IDbContextFactory<TravelItineraryWebsite.Data.TravelItineraryWebsiteContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Weather</h2>
    <hr />
    @if (weather is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">WeatherName</dt>
            <dd class="col-sm-10">@weather.WeatherName</dd>
            <dt class="col-sm-2">WeatherForecast</dt>
            <dd class="col-sm-10">@weather.WeatherForecast</dd>
            <dt class="col-sm-2">WeatherDescription</dt>
            <dd class="col-sm-10">@weather.WeatherDescription</dd>
            <dt class="col-sm-2">DestinationId</dt>
            <dd class="col-sm-10">@weather.DestinationId</dd>
            <dt class="col-sm-2">LocationId</dt>
            <dd class="col-sm-10">@weather.LocationId</dd>
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@weather.DateCreated</dd>
            <dt class="col-sm-2">DateUpdated</dt>
            <dd class="col-sm-10">@weather.DateUpdated</dd>
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@weather.CreatedBy</dd>
            <dt class="col-sm-2">UpdatedBy</dt>
            <dd class="col-sm-10">@weather.UpdatedBy</dd>
        </dl>
        <div>
            <a href="@($"/weathers/edit?weatherid={weather.WeatherId}")">Edit</a> |
            <a href="@($"/weathers")">Back to List</a>
        </div>
    }
</div>

@code {
    private Weather? weather;

    [SupplyParameterFromQuery]
    private int WeatherId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        weather = await context.Weather.FirstOrDefaultAsync(m => m.WeatherId == WeatherId);

        if (weather is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
